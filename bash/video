#/************************************************************************************
#***
#***	Copyright 2019 Dell(18588220928@163.com), All Rights Reserved.
#***
#***	File Author: Dell, 2019-11-05 13:03:37
#***
#************************************************************************************/
#
#! /bin/sh

usage()
{
	echo "Usage: $0 [options] input output"
	echo "Options:"
	echo "    encode <input/%3d.png> <output.mp4>"
	echo "           Encode input to output"
	echo "    decode <input.mp4> <output/%3d.png"
	echo "           Decode input to output"
	echo "    togray <input.mp4> <output.mp4 | output/%3d.png>"
	echo "           Convert color video to gray one"
	echo "    halfsize <input.mp4> <output.mp4 | output/%3d.png>"
	echo "           Scale video to half size"
	echo "    keyframe <input.mp4> <output/%3d.png>"
	echo "           Extract key frames"
	echo "    cutframe --start <n1> --duration <n1> <input.mp4> <output.mp4 | output/%3d.png>"
	echo "           Cut video from start time n1 seconds, long n2 seconds"

	exit 1
}

cutframe()
{
	START=0
	DURATION=1

	i=0
	while [ $i -lt 2 ] ; 
	do
		case $1 in
		--s*)
			START=$2
			shift
			shift
			;;
		--d*)
			DURATION=$2;
			shift
			shift
			;;
		esac
		i=`expr $i + 1`
	done

	[ "$1" == "" -o "$2" == ""  ] && usage
	echo ffmpeg -ss "$START" -t "$DURATION" -accurate_seek -i "$1" -codec copy "$2"
}

encode()
{
	[ "$1" == "" -o "$2" == ""  ] && usage

	ffmpeg -i "$1" -vcodec avc -c:v h264 -preset slow -crf 11 -vf format=yuv420p "$2"
	# Test results:
	# crf == 10: hr PSNR = 43.00, Size = 70M
	# crf == 11: hr PSNR = 42.75, Size = 58M ----------------------- Best < Size 60M
	# crf == 12: hr PSNR = 42.49, Size = 49M 
	# crf == 15: hr PSNR = 41.70, Size = 29M
}


decode()
{
	[ "$1" == "" -o "$2" == ""  ] && usage
	ffmpeg -i "$1" -q:v 2 "$2"
}

togray()
{
	[ "$1" == "" -o "$2" == ""  ] && usage
	ffmpeg -i "$1" -vf hue=s=0 "$2"
}

halfsize()
{
	[ "$1" == "" -o "$2" == ""  ] && usage
	ffmpeg -i "$1" -vf scale="iw/2:ih/2" "$2"
}

keyframe()
{
	[ "$1" == "" -o "$2" == ""  ] && usage
	ffmpeg -i "$1" -vf select='eq(pict_type\,I)' -vsync 2 -f image2 "$2"
}

if [ "$*" == "" ] ;
then
	usage
else
	eval "$*"
fi
